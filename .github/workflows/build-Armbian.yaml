name: Build Armbian

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      board:
        description: 'Board Select(rock960)'
        required: true
        default: 'rock960'
      branch:
        description: 'Kernel Select(current|edge)'
        required: true
        default: 'edge'
      release:
        description: 'Ubuntu Selsect(jammy|lunar)'
        required: true
        default: 'jammy'
      desktop:
        description: 'Armbian Desktop(yes|no)'
        required: true
        default: 'no'
      minimal:
        description: 'Armbian Minimal(yes|no)'
        required: true
        default: 'no'
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  REPO_URL: https://github.com/Anuo-shuo/Armbian
  REPO_BRANCH: master
  
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  
  BOARD: rock960
  BRANCH: egde
  RELEASE: jammy
  DESKTOP: no
  MINIMAL: no

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        echo "BOARD=${{ github.event.inputs.board }}" >> $GITHUB_ENV
        echo "BRANCH=${{ github.event.inputs.branch }}" >> $GITHUB_ENV
        echo "RELEASE=${{ github.event.inputs.release }}" >> $GITHUB_ENV
        echo "DESKTOP=${{ github.event.inputs.desktop }}" >> $GITHUB_ENV
        echo "MINIMAL=${{ github.event.inputs.minimal }}" >> $GITHUB_ENV
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH Armbian
        ln -sf /workdir/Armbian $GITHUB_WORKSPACE/Armbian
        echo "NOT cp Armbian/config/boards/rock960.csc Armbian/config/boards/rock960.conf"

    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
    
    - name: Compile firmware(CLI)
      id: compile_cli
      if: github.event.inputs.desktop  == 'no'
      run: |       
        cd Armbian
        echo $PWD
        sudo ./compile.sh  BOARD=${{env.BOARD}} BRANCH=${{env.BRANCH}} RELEASE=${{env.RELEASE}} BUILD_MINIMAL=${{env.MINIMAL}} BUILD_ONLY=no BUILD_DESKTOP=no KERNEL_CONFIGURE=no COMPRESS_OUTPUTIMAGE=sha,7z
        echo "status=success" >> $GITHUB_OUTPUT
    
    - name: Compile firmware(Desktop)
      id: compile_desktop
      if: github.event.inputs.desktop  == 'yes'
      run: |       
        cd Armbian
        echo $PWD
        sudo ./compile.sh  BOARD=${{env.BOARD}} BRANCH=${{env.BRANCH}} RELEASE=${{env.RELEASE}} BUILD_MINIMAL=${{env.MINIMAL}} BUILD_ONLY=no BUILD_DESKTOP=yes KERNEL_CONFIGURE=no COMPRESS_OUTPUTIMAGE=sha,7z DESKTOP_ENVIRONMENT="xfce" DESKTOP_ENVIRONMENT_CONFIG_NAME="config_base" DESKTOP_APPGROUPS_SELECTED="3dsupport browsers chat desktop_tools editors email internet multimedia office programming remote_desktop" NO_APT_CACHER="yes" 
        echo "status=success" >> $GITHUB_OUTPUT
    
    - name: Copy firmware
      id: copy
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        echo $PWD
        cd Armbian
        mkdir github_release
        ls
        cp -r ./output/debs/* ./github_release/
        cp -r ./output/images/* ./github_release/
        cp -r ./output/debs/${{env.RELEASE}}/* ./github_release/
        ls ./github_release/
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload debs directory
      uses: actions/upload-artifact@main
      if: env.UPLOAD_BIN_DIR == 'true' && !cancelled()
      with:
        name: Armbian_rock960_debs
        path: Armbian/output/debs
        
    - name: Upload images directory
      uses: actions/upload-artifact@main
      if: env.UPLOAD_BIN_DIR == 'true' && !cancelled()
      with:
        name: Armbian_rock960_images
        path: Armbian/output/images

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        echo $PWD
        cd Armbian/github_release
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled() && (steps.compile_cli.outputs.status == 'success' ||  steps.compile_desktop.outputs.status == 'success')
      with:
        name: Armbian_rock960_release
        path: ${{ env.FIRMWARE }}

    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled() && (steps.compile_cli.outputs.status == 'success' ||  steps.compile_desktop.outputs.status == 'success')
      run: |
        echo $PWD
        echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
        touch release.txt
        [ $UPLOAD_COWTRANSFER = true ] && echo "ðŸ”— [Cowtransfer](${{ steps.cowtransfer.outputs.url }})" >> release.txt
        [ $UPLOAD_WETRANSFER = true ] && echo "ðŸ”— [WeTransfer](${{ steps.wetransfer.outputs.url }})" >> release.txt
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()&& (steps.compile_cli.outputs.status == 'success' ||  steps.compile_desktop.outputs.status == 'success')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*
